version: '3.8'

volumes:
  rabbitmq_data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  monitoring:
    driver: bridge

services:
  bookingservice:   
    image: ${DOCKER_REGISTRY-}bookingservice
    container_name: bookingService
    build:
      context: ../../src
      dockerfile: Services/BookingService/Dockerfile
    depends_on:
      - rabbitmq
      - otel-collector
      - jaeger 
    environment:
        - OTEL_SERVICE_NAME=BookingService
    networks:
      - monitoring

  reservationservice:
    image: ${DOCKER_REGISTRY-}reservationservice
    container_name: reservationService
    build:
      context: ../../src
      dockerfile: Services/ReservationService/Dockerfile
    depends_on:
      - rabbitmq
      - otel-collector
      - jaeger 
    environment:
        - OTEL_SERVICE_NAME=ReservationService
    networks:
      - monitoring

  paymentservice:
    image: ${DOCKER_REGISTRY-}paymentservice
    container_name: paymentService
    build:
      context: ../../src
      dockerfile: Services/PaymentService/Dockerfile
    depends_on:
      - rabbitmq
      - otel-collector
      - jaeger 
    environment:
        - OTEL_SERVICE_NAME=PaymentService
    networks:
      - monitoring

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - monitoring
  otel-collector:
    image: otel/opentelemetry-collector:0.95.0
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ../config/otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "8888:8888" 
      - "8889:8889" 
      - "13133:13133"
      - "4317:4317"
    networks:
      - monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ../config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    restart: unless-stopped
    networks:
      - monitoring  

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - '3000:3000'
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - monitoring

  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.5.0
    container_name: node_exporter
    command: '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - monitoring
  
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"  # UI
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    networks:
      - monitoring
  
   